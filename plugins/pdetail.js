
const Mizuki = require('../events');
const { MessageType } = require('@adiwajshing/baileys');
const axios = require('axios');
const Config = require('../config');

const { errorMessage, infoMessage } = require('../helpers');
const Language = require('../language');
const PHONEDE_DESC = "It sends Phone details from gsmarena."
const NEED_WORDC = "කරුණාකර දුරකථනයක නමක් ඇතුළත් කරන්න."
const USAGE = ".pdetail Redmi note 9"
const LOADING = "*Fetching Phone's Data*..."
const PHN_PHN = "*Result's Phone Name*-:"
const PHN_NAME = "*Released*-:"
const PHN_RDATE = "*Size*-:"
const PHN_SIZE = "*OS*-:"
const PHN_ANDRO = "*Storage*-:"
const PHN_STOR = "*Display*-:"
const PHN_DISP = "*Display Size*-:"
const PHN_INCH = "*Main Camera*-:"
const PHN_PIX = "*Max Video Pixel*-:"
const PHN_VPIX = "*RAM*-:"
const PHN_CREAT = "*Chipset*-:"
const PHN_BAT = "*Battery*-:"
const PHN_BATX = "*Battery Type*-:"
const PHN_DETAIL = "*Other Details*-:"
const NOT_FOUND = "*Can't Find Anything!.*"

if (Config.WORKTYPE == 'private') {
    
    Mizuki.addCommand({ pattern: 'pdetail ?(.*)', fromMe: true, usage: USAGE, desc: PHONEDE_DESC }, async (message, match) => {

    const pname = match[1]

    if (!pname) return await message.sendMessage(errorMessage(NEED_WORDC))
      
    await message.sendMessage(infoMessage(LOADING))
      
    await axios
      .get(`https://zenzapi.xyz/api/gsmarena?query=${pname}&apikey=bd1d878624f7`)
      .then(async (response) => {
        const {
              judul,
              rilis,
              thumb,
              ukuran,
              type,
              name,
              storage,
              display,
              inchi,
              pixel,
              videoPixel,
              ram,
              chipset,
              batrai,
              merek_batre,
              detail,
              
        } = response.data.result    

 
        const picBuffer = await axios.get(thumb, {responseType: 'arraybuffer'})

        const msg = `*${PHN_PHN}* ${judul}` + `\n` +        
        `*${PHN_NAME}* ${rilis}` + `\n` + 
        `*${PHN_RDATE}* ${ukuran}`+ `\n` + 
        `*${PHN_SIZE}* ${type}` + `\n` + 
        `*${PHN_ANDRO}* ${storage}` + `\n` + 
        `*${PHN_STOR}* ${display}` + `\n` + 
        `*${PHN_DISP}* ${inchi}` + `\n` + 
        `*${PHN_INCH}* ${pixel}` + `\n` + 
        `*${PHN_PIX}* ${videoPixel}` + `\n` + 
        `*${PHN_VPIX}* ${ram}` + `\n` + 
        `*${PHN_CREAT}* ${chipset}` + `\n` + 
        `*${PHN_BAT}* ${batrai}` + `\n` +      
        `*${PHN_BATX}* ${merek_batre}` + `\n` + `\n` +
        `*${PHN_DETAIL}* ${detail}` + `\n` +         
        
        await message.sendMessage(Buffer.from(picBuffer.data), MessageType.image, {      
          caption: msg +'\n'+'```_*Generated by Queen Mizuki*_```'
        })
      })
      .catch(
        async (err) => await message.sendMessage(errorMessage(NOT_FOUND + pname)),
      )
  },

 )
}

 
if (Config.WORKTYPE == 'public') {
    
    Mizuki.addCommand({ pattern: 'pdetail ?(.*)', fromMe: false, usage: USAGE, desc: PHONEDE_DESC }, async (message, match) => {

    const pname = match[1]

    if (!pname) return await message.sendMessage(errorMessage(NEED_WORDC))
      
    await message.sendMessage(infoMessage(LOADING))
      
    await axios
      .get(`https://zenzapi.xyz/api/gsmarena?query=${pname}&apikey=bd1d878624f7`)
      .then(async (response) => {
        const {
              judul,
              rilis,
              thumb,
              ukuran,
              type,
              name,
              storage,
              display,
              inchi,
              pixel,
              videoPixel,
              ram,
              chipset,
              batrai,
              merek_batre,
              detail,
              
        } = response.data.result
 
        const picBuffer = await axios.get(thumb, {responseType: 'arraybuffer'})

        const msg = `*${PHN_PHN}* ${judul}` + `\n` +        
        `*${PHN_NAME}* ${rilis}` + `\n` + 
        `*${PHN_RDATE}* ${ukuran}`+ `\n` + 
        `*${PHN_SIZE}* ${type}` + `\n` + 
        `*${PHN_ANDRO}* ${storage}` + `\n` + 
        `*${PHN_STOR}* ${display}` + `\n` + 
        `*${PHN_DISP}* ${inchi}` + `\n` + 
        `*${PHN_INCH}* ${pixel}` + `\n` + 
        `*${PHN_PIX}* ${videoPixel}` + `\n` + 
        `*${PHN_VPIX}* ${ram}` + `\n` + 
        `*${PHN_CREAT}* ${chipset}` + `\n` + 
        `*${PHN_BAT}* ${batrai}` + `\n` +      
        `*${PHN_BATX}* ${merek_batre}` + `\n` + `\n` +
        `*${PHN_DETAIL}* ${detail}` + `\n` +         
        
        await message.sendMessage(Buffer.from(picBuffer.data), MessageType.image, {      
          caption: msg +'\n'+'```_*Generated by Queen Mizuki*_```'
        })
      })
      .catch(
        async (err) => await message.sendMessage(errorMessage(NOT_FOUND + pname)),
      )
  },

 )
}


































